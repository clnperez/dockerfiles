## To run this, bind-mount in whatever project you're building to a user's home dir.
## You'll lose your cache when you exit the container though, b/c bazel sym-links the
## output to ~/.cache/bazel/, which is outside the docker build scope on your system.

FROM ubuntu:bionic

ARG BAZEL_RELEASE=0.27.0

RUN apt-get update && apt-get install -y automake cmake \
    clang-8 llvm-8 lld-8 \
    openjdk-11-jdk \
    git wget libtool m4 sudo vim-tiny curl pkg-config ninja-build python && \
    rm -rf /var/cache/apt/lists/*

RUN mkdir bazel
WORKDIR bazel
RUN sh ` \
    case $(uname -m) in \
    'ppc64le'|'ppc64el') \
       curl -o /usr/bin/bazel -fSL https://oplab9.parqtec.unicamp.br/pub/ppc64el/bazel/ubuntu_18.04/bazel_bin_ppc64le_${BAZEL_RELEASE} && \
       chmod +x /usr/bin/bazel \
       ;; \
    'x86_64') \
       curl -o bazel_installer.sh -fSL https://github.com/bazelbuild/bazel/releases/download/${BAZEL_RELEASE}/bazel-${BAZEL_RELEASE}-installer-linux-x86_64.sh && \
       chmod +x bazel-${BAZEL_RELEASE}-installer-linux-x86_64.sh && \
       ./bazel-${BAZEL_RELEASE}-installer-linux-x86_64.sh \
       ;; \
    esac `


RUN bazel version
